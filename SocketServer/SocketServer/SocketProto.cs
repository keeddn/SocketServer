// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: SocketProto.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SocketProto {

  /// <summary>Holder for reflection information generated from SocketProto.proto</summary>
  public static partial class SocketProtoReflection {

    #region Descriptor
    /// <summary>File descriptor for SocketProto.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SocketProtoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFTb2NrZXRQcm90by5wcm90bxILU29ja2V0UHJvdG8iKwoJTG9naW5QYWNr",
            "EgwKBG5hbWUYASABKAkSEAoIcGFzc3dvcmQYAiABKAkiTAoKUGxheWVySW5m",
            "bxISCgpwbGF5ZXJuYW1lGAEgASgJEhUKDXBsYXllcklkZW5pdHkYAiABKAUS",
            "EwoLcGxheWVyc3RhdGUYAyABKAUifwoIUm9vbVBhY2sSEAoIcm9vbW5hbWUY",
            "ASABKAkSEQoJbm93cGxheWVyGAIgASgFEhEKCW1heHBsYXllchgDIAEoBRIN",
            "CgVzdGF0ZRgEIAEoBRIsCgtwbGF5ZXJpbmZvcxgFIAMoCzIXLlNvY2tldFBy",
            "b3RvLlBsYXllckluZm8i9AEKCE1haW5QYWNrEgsKA3N0chgBIAEoCRItCgty",
            "ZXF1ZXN0Y29kZRgCIAEoDjIYLlNvY2tldFByb3RvLlJlcXVlc3RDb2RlEisK",
            "CmFjdGlvbmNvZGUYAyABKA4yFy5Tb2NrZXRQcm90by5BY3Rpb25Db2RlEisK",
            "CnJldHVybmNvZGUYBCABKA4yFy5Tb2NrZXRQcm90by5SZXR1cm5Db2RlEikK",
            "CWxvZ2lucGFjaxgFIAEoCzIWLlNvY2tldFByb3RvLkxvZ2luUGFjaxInCghy",
            "b29tcGFjaxgGIAMoCzIVLlNvY2tldFByb3RvLlJvb21QYWNrKjIKC1JlcXVl",
            "c3RDb2RlEg8KC1JlcXVlc3ROb25lEAASCAoEVXNlchABEggKBFJvb20QAiqf",
            "AQoKQWN0aW9uQ29kZRIOCgpBY3Rpb25Ob25lEAASDAoIcmVnaXN0ZXIQARIJ",
            "CgVsb2dpbhACEg4KCkNyZWF0ZVJvb20QAxIMCghGaW5kUm9vbRAEEgwKCEpv",
            "aW5Sb29tEAUSEQoNUmVmcmVzaFBsYXllchAGEg0KCUxlYXZlUm9vbRAHEg8K",
            "C1NlbmRNZXNzYWdlEAgSCQoFUmVhZHkQCSpBCgpSZXR1cm5Db2RlEg4KClJl",
            "dHVybk5vbmUQABILCgdzdWNjZWVkEAESCAoEZmFpbBACEgwKCG5vdEZvdW5k",
            "EANiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::SocketProto.RequestCode), typeof(global::SocketProto.ActionCode), typeof(global::SocketProto.ReturnCode), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SocketProto.LoginPack), global::SocketProto.LoginPack.Parser, new[]{ "Name", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SocketProto.PlayerInfo), global::SocketProto.PlayerInfo.Parser, new[]{ "Playername", "PlayerIdenity", "Playerstate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SocketProto.RoomPack), global::SocketProto.RoomPack.Parser, new[]{ "Roomname", "Nowplayer", "Maxplayer", "State", "Playerinfos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SocketProto.MainPack), global::SocketProto.MainPack.Parser, new[]{ "Str", "Requestcode", "Actioncode", "Returncode", "Loginpack", "Roompack" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum RequestCode {
    [pbr::OriginalName("RequestNone")] RequestNone = 0,
    [pbr::OriginalName("User")] User = 1,
    [pbr::OriginalName("Room")] Room = 2,
  }

  public enum ActionCode {
    [pbr::OriginalName("ActionNone")] ActionNone = 0,
    [pbr::OriginalName("register")] Register = 1,
    [pbr::OriginalName("login")] Login = 2,
    [pbr::OriginalName("CreateRoom")] CreateRoom = 3,
    [pbr::OriginalName("FindRoom")] FindRoom = 4,
    [pbr::OriginalName("JoinRoom")] JoinRoom = 5,
    [pbr::OriginalName("RefreshPlayer")] RefreshPlayer = 6,
    [pbr::OriginalName("LeaveRoom")] LeaveRoom = 7,
    [pbr::OriginalName("SendMessage")] SendMessage = 8,
    [pbr::OriginalName("Ready")] Ready = 9,
  }

  public enum ReturnCode {
    [pbr::OriginalName("ReturnNone")] ReturnNone = 0,
    [pbr::OriginalName("succeed")] Succeed = 1,
    [pbr::OriginalName("fail")] Fail = 2,
    [pbr::OriginalName("notFound")] NotFound = 3,
  }

  #endregion

  #region Messages
  public sealed partial class LoginPack : pb::IMessage<LoginPack> {
    private static readonly pb::MessageParser<LoginPack> _parser = new pb::MessageParser<LoginPack>(() => new LoginPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SocketProto.SocketProtoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginPack(LoginPack other) : this() {
      name_ = other.name_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginPack Clone() {
      return new LoginPack(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginPack other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlayerInfo : pb::IMessage<PlayerInfo> {
    private static readonly pb::MessageParser<PlayerInfo> _parser = new pb::MessageParser<PlayerInfo>(() => new PlayerInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SocketProto.SocketProtoReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfo(PlayerInfo other) : this() {
      playername_ = other.playername_;
      playerIdenity_ = other.playerIdenity_;
      playerstate_ = other.playerstate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfo Clone() {
      return new PlayerInfo(this);
    }

    /// <summary>Field number for the "playername" field.</summary>
    public const int PlayernameFieldNumber = 1;
    private string playername_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Playername {
      get { return playername_; }
      set {
        playername_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "playerIdenity" field.</summary>
    public const int PlayerIdenityFieldNumber = 2;
    private int playerIdenity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerIdenity {
      get { return playerIdenity_; }
      set {
        playerIdenity_ = value;
      }
    }

    /// <summary>Field number for the "playerstate" field.</summary>
    public const int PlayerstateFieldNumber = 3;
    private int playerstate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Playerstate {
      get { return playerstate_; }
      set {
        playerstate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Playername != other.Playername) return false;
      if (PlayerIdenity != other.PlayerIdenity) return false;
      if (Playerstate != other.Playerstate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Playername.Length != 0) hash ^= Playername.GetHashCode();
      if (PlayerIdenity != 0) hash ^= PlayerIdenity.GetHashCode();
      if (Playerstate != 0) hash ^= Playerstate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Playername.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Playername);
      }
      if (PlayerIdenity != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerIdenity);
      }
      if (Playerstate != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Playerstate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Playername.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Playername);
      }
      if (PlayerIdenity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerIdenity);
      }
      if (Playerstate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Playerstate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerInfo other) {
      if (other == null) {
        return;
      }
      if (other.Playername.Length != 0) {
        Playername = other.Playername;
      }
      if (other.PlayerIdenity != 0) {
        PlayerIdenity = other.PlayerIdenity;
      }
      if (other.Playerstate != 0) {
        Playerstate = other.Playerstate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Playername = input.ReadString();
            break;
          }
          case 16: {
            PlayerIdenity = input.ReadInt32();
            break;
          }
          case 24: {
            Playerstate = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoomPack : pb::IMessage<RoomPack> {
    private static readonly pb::MessageParser<RoomPack> _parser = new pb::MessageParser<RoomPack>(() => new RoomPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SocketProto.SocketProtoReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomPack(RoomPack other) : this() {
      roomname_ = other.roomname_;
      nowplayer_ = other.nowplayer_;
      maxplayer_ = other.maxplayer_;
      state_ = other.state_;
      playerinfos_ = other.playerinfos_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomPack Clone() {
      return new RoomPack(this);
    }

    /// <summary>Field number for the "roomname" field.</summary>
    public const int RoomnameFieldNumber = 1;
    private string roomname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Roomname {
      get { return roomname_; }
      set {
        roomname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nowplayer" field.</summary>
    public const int NowplayerFieldNumber = 2;
    private int nowplayer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Nowplayer {
      get { return nowplayer_; }
      set {
        nowplayer_ = value;
      }
    }

    /// <summary>Field number for the "maxplayer" field.</summary>
    public const int MaxplayerFieldNumber = 3;
    private int maxplayer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Maxplayer {
      get { return maxplayer_; }
      set {
        maxplayer_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 4;
    private int state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "playerinfos" field.</summary>
    public const int PlayerinfosFieldNumber = 5;
    private static readonly pb::FieldCodec<global::SocketProto.PlayerInfo> _repeated_playerinfos_codec
        = pb::FieldCodec.ForMessage(42, global::SocketProto.PlayerInfo.Parser);
    private readonly pbc::RepeatedField<global::SocketProto.PlayerInfo> playerinfos_ = new pbc::RepeatedField<global::SocketProto.PlayerInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SocketProto.PlayerInfo> Playerinfos {
      get { return playerinfos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Roomname != other.Roomname) return false;
      if (Nowplayer != other.Nowplayer) return false;
      if (Maxplayer != other.Maxplayer) return false;
      if (State != other.State) return false;
      if(!playerinfos_.Equals(other.playerinfos_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Roomname.Length != 0) hash ^= Roomname.GetHashCode();
      if (Nowplayer != 0) hash ^= Nowplayer.GetHashCode();
      if (Maxplayer != 0) hash ^= Maxplayer.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      hash ^= playerinfos_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Roomname.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Roomname);
      }
      if (Nowplayer != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Nowplayer);
      }
      if (Maxplayer != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Maxplayer);
      }
      if (State != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(State);
      }
      playerinfos_.WriteTo(output, _repeated_playerinfos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Roomname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Roomname);
      }
      if (Nowplayer != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Nowplayer);
      }
      if (Maxplayer != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Maxplayer);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      size += playerinfos_.CalculateSize(_repeated_playerinfos_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomPack other) {
      if (other == null) {
        return;
      }
      if (other.Roomname.Length != 0) {
        Roomname = other.Roomname;
      }
      if (other.Nowplayer != 0) {
        Nowplayer = other.Nowplayer;
      }
      if (other.Maxplayer != 0) {
        Maxplayer = other.Maxplayer;
      }
      if (other.State != 0) {
        State = other.State;
      }
      playerinfos_.Add(other.playerinfos_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Roomname = input.ReadString();
            break;
          }
          case 16: {
            Nowplayer = input.ReadInt32();
            break;
          }
          case 24: {
            Maxplayer = input.ReadInt32();
            break;
          }
          case 32: {
            State = input.ReadInt32();
            break;
          }
          case 42: {
            playerinfos_.AddEntriesFrom(input, _repeated_playerinfos_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MainPack : pb::IMessage<MainPack> {
    private static readonly pb::MessageParser<MainPack> _parser = new pb::MessageParser<MainPack>(() => new MainPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MainPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SocketProto.SocketProtoReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MainPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MainPack(MainPack other) : this() {
      str_ = other.str_;
      requestcode_ = other.requestcode_;
      actioncode_ = other.actioncode_;
      returncode_ = other.returncode_;
      loginpack_ = other.loginpack_ != null ? other.loginpack_.Clone() : null;
      roompack_ = other.roompack_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MainPack Clone() {
      return new MainPack(this);
    }

    /// <summary>Field number for the "str" field.</summary>
    public const int StrFieldNumber = 1;
    private string str_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Str {
      get { return str_; }
      set {
        str_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "requestcode" field.</summary>
    public const int RequestcodeFieldNumber = 2;
    private global::SocketProto.RequestCode requestcode_ = global::SocketProto.RequestCode.RequestNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketProto.RequestCode Requestcode {
      get { return requestcode_; }
      set {
        requestcode_ = value;
      }
    }

    /// <summary>Field number for the "actioncode" field.</summary>
    public const int ActioncodeFieldNumber = 3;
    private global::SocketProto.ActionCode actioncode_ = global::SocketProto.ActionCode.ActionNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketProto.ActionCode Actioncode {
      get { return actioncode_; }
      set {
        actioncode_ = value;
      }
    }

    /// <summary>Field number for the "returncode" field.</summary>
    public const int ReturncodeFieldNumber = 4;
    private global::SocketProto.ReturnCode returncode_ = global::SocketProto.ReturnCode.ReturnNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketProto.ReturnCode Returncode {
      get { return returncode_; }
      set {
        returncode_ = value;
      }
    }

    /// <summary>Field number for the "loginpack" field.</summary>
    public const int LoginpackFieldNumber = 5;
    private global::SocketProto.LoginPack loginpack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketProto.LoginPack Loginpack {
      get { return loginpack_; }
      set {
        loginpack_ = value;
      }
    }

    /// <summary>Field number for the "roompack" field.</summary>
    public const int RoompackFieldNumber = 6;
    private static readonly pb::FieldCodec<global::SocketProto.RoomPack> _repeated_roompack_codec
        = pb::FieldCodec.ForMessage(50, global::SocketProto.RoomPack.Parser);
    private readonly pbc::RepeatedField<global::SocketProto.RoomPack> roompack_ = new pbc::RepeatedField<global::SocketProto.RoomPack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SocketProto.RoomPack> Roompack {
      get { return roompack_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MainPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MainPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Str != other.Str) return false;
      if (Requestcode != other.Requestcode) return false;
      if (Actioncode != other.Actioncode) return false;
      if (Returncode != other.Returncode) return false;
      if (!object.Equals(Loginpack, other.Loginpack)) return false;
      if(!roompack_.Equals(other.roompack_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Str.Length != 0) hash ^= Str.GetHashCode();
      if (Requestcode != global::SocketProto.RequestCode.RequestNone) hash ^= Requestcode.GetHashCode();
      if (Actioncode != global::SocketProto.ActionCode.ActionNone) hash ^= Actioncode.GetHashCode();
      if (Returncode != global::SocketProto.ReturnCode.ReturnNone) hash ^= Returncode.GetHashCode();
      if (loginpack_ != null) hash ^= Loginpack.GetHashCode();
      hash ^= roompack_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Str.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Str);
      }
      if (Requestcode != global::SocketProto.RequestCode.RequestNone) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Requestcode);
      }
      if (Actioncode != global::SocketProto.ActionCode.ActionNone) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Actioncode);
      }
      if (Returncode != global::SocketProto.ReturnCode.ReturnNone) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Returncode);
      }
      if (loginpack_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Loginpack);
      }
      roompack_.WriteTo(output, _repeated_roompack_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Str.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Str);
      }
      if (Requestcode != global::SocketProto.RequestCode.RequestNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Requestcode);
      }
      if (Actioncode != global::SocketProto.ActionCode.ActionNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Actioncode);
      }
      if (Returncode != global::SocketProto.ReturnCode.ReturnNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Returncode);
      }
      if (loginpack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Loginpack);
      }
      size += roompack_.CalculateSize(_repeated_roompack_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MainPack other) {
      if (other == null) {
        return;
      }
      if (other.Str.Length != 0) {
        Str = other.Str;
      }
      if (other.Requestcode != global::SocketProto.RequestCode.RequestNone) {
        Requestcode = other.Requestcode;
      }
      if (other.Actioncode != global::SocketProto.ActionCode.ActionNone) {
        Actioncode = other.Actioncode;
      }
      if (other.Returncode != global::SocketProto.ReturnCode.ReturnNone) {
        Returncode = other.Returncode;
      }
      if (other.loginpack_ != null) {
        if (loginpack_ == null) {
          Loginpack = new global::SocketProto.LoginPack();
        }
        Loginpack.MergeFrom(other.Loginpack);
      }
      roompack_.Add(other.roompack_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Str = input.ReadString();
            break;
          }
          case 16: {
            Requestcode = (global::SocketProto.RequestCode) input.ReadEnum();
            break;
          }
          case 24: {
            Actioncode = (global::SocketProto.ActionCode) input.ReadEnum();
            break;
          }
          case 32: {
            Returncode = (global::SocketProto.ReturnCode) input.ReadEnum();
            break;
          }
          case 42: {
            if (loginpack_ == null) {
              Loginpack = new global::SocketProto.LoginPack();
            }
            input.ReadMessage(Loginpack);
            break;
          }
          case 50: {
            roompack_.AddEntriesFrom(input, _repeated_roompack_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
